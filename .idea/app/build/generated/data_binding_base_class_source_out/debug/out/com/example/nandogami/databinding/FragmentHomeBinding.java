// Generated by view binder compiler. Do not edit!
package com.example.nandogami.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nandogami.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final RecyclerView rvCategories;

  @NonNull
  public final RecyclerView rvFeatured;

  @NonNull
  public final RecyclerView rvNewRelease;

  @NonNull
  public final RecyclerView rvPopular;

  @NonNull
  public final NestedScrollView scrollHome;

  @NonNull
  public final TextView textHome;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentHomeBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button btnLogout,
      @NonNull RecyclerView rvCategories, @NonNull RecyclerView rvFeatured,
      @NonNull RecyclerView rvNewRelease, @NonNull RecyclerView rvPopular,
      @NonNull NestedScrollView scrollHome, @NonNull TextView textHome,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnLogout = btnLogout;
    this.rvCategories = rvCategories;
    this.rvFeatured = rvFeatured;
    this.rvNewRelease = rvNewRelease;
    this.rvPopular = rvPopular;
    this.scrollHome = scrollHome;
    this.textHome = textHome;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.rvCategories;
      RecyclerView rvCategories = ViewBindings.findChildViewById(rootView, id);
      if (rvCategories == null) {
        break missingId;
      }

      id = R.id.rvFeatured;
      RecyclerView rvFeatured = ViewBindings.findChildViewById(rootView, id);
      if (rvFeatured == null) {
        break missingId;
      }

      id = R.id.rvNewRelease;
      RecyclerView rvNewRelease = ViewBindings.findChildViewById(rootView, id);
      if (rvNewRelease == null) {
        break missingId;
      }

      id = R.id.rvPopular;
      RecyclerView rvPopular = ViewBindings.findChildViewById(rootView, id);
      if (rvPopular == null) {
        break missingId;
      }

      id = R.id.scrollHome;
      NestedScrollView scrollHome = ViewBindings.findChildViewById(rootView, id);
      if (scrollHome == null) {
        break missingId;
      }

      id = R.id.text_home;
      TextView textHome = ViewBindings.findChildViewById(rootView, id);
      if (textHome == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentHomeBinding((CoordinatorLayout) rootView, appBarLayout, btnLogout,
          rvCategories, rvFeatured, rvNewRelease, rvPopular, scrollHome, textHome, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
