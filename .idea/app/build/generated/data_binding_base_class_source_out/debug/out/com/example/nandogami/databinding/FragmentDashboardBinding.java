// Generated by view binder compiler. Do not edit!
package com.example.nandogami.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nandogami.R;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ChipGroup filtersChipGroup;

  @NonNull
  public final HorizontalScrollView filtersScrollView;

  @NonNull
  public final ImageView ivProfile;

  @NonNull
  public final ChipGroup popularSearchesChipGroup;

  @NonNull
  public final RecyclerView recentSearchesRecyclerView;

  @NonNull
  public final TextInputEditText searchEditText;

  @NonNull
  public final RecyclerView searchResultsRecyclerView;

  @NonNull
  public final TextInputLayout searchTextInputLayout;

  @NonNull
  public final TextView tvClearAll;

  @NonNull
  public final TextView tvNandogami;

  @NonNull
  public final TextView tvPopularSearches;

  @NonNull
  public final TextView tvRecentSearches;

  @NonNull
  public final TextView tvSearchResults;

  @NonNull
  public final TextView tvSearchTitle;

  @NonNull
  public final TextView tvTitlesCount;

  private FragmentDashboardBinding(@NonNull NestedScrollView rootView,
      @NonNull ChipGroup filtersChipGroup, @NonNull HorizontalScrollView filtersScrollView,
      @NonNull ImageView ivProfile, @NonNull ChipGroup popularSearchesChipGroup,
      @NonNull RecyclerView recentSearchesRecyclerView, @NonNull TextInputEditText searchEditText,
      @NonNull RecyclerView searchResultsRecyclerView,
      @NonNull TextInputLayout searchTextInputLayout, @NonNull TextView tvClearAll,
      @NonNull TextView tvNandogami, @NonNull TextView tvPopularSearches,
      @NonNull TextView tvRecentSearches, @NonNull TextView tvSearchResults,
      @NonNull TextView tvSearchTitle, @NonNull TextView tvTitlesCount) {
    this.rootView = rootView;
    this.filtersChipGroup = filtersChipGroup;
    this.filtersScrollView = filtersScrollView;
    this.ivProfile = ivProfile;
    this.popularSearchesChipGroup = popularSearchesChipGroup;
    this.recentSearchesRecyclerView = recentSearchesRecyclerView;
    this.searchEditText = searchEditText;
    this.searchResultsRecyclerView = searchResultsRecyclerView;
    this.searchTextInputLayout = searchTextInputLayout;
    this.tvClearAll = tvClearAll;
    this.tvNandogami = tvNandogami;
    this.tvPopularSearches = tvPopularSearches;
    this.tvRecentSearches = tvRecentSearches;
    this.tvSearchResults = tvSearchResults;
    this.tvSearchTitle = tvSearchTitle;
    this.tvTitlesCount = tvTitlesCount;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.filtersChipGroup;
      ChipGroup filtersChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (filtersChipGroup == null) {
        break missingId;
      }

      id = R.id.filtersScrollView;
      HorizontalScrollView filtersScrollView = ViewBindings.findChildViewById(rootView, id);
      if (filtersScrollView == null) {
        break missingId;
      }

      id = R.id.ivProfile;
      ImageView ivProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.popularSearchesChipGroup;
      ChipGroup popularSearchesChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (popularSearchesChipGroup == null) {
        break missingId;
      }

      id = R.id.recentSearchesRecyclerView;
      RecyclerView recentSearchesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recentSearchesRecyclerView == null) {
        break missingId;
      }

      id = R.id.searchEditText;
      TextInputEditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.searchResultsRecyclerView;
      RecyclerView searchResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsRecyclerView == null) {
        break missingId;
      }

      id = R.id.searchTextInputLayout;
      TextInputLayout searchTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchTextInputLayout == null) {
        break missingId;
      }

      id = R.id.tvClearAll;
      TextView tvClearAll = ViewBindings.findChildViewById(rootView, id);
      if (tvClearAll == null) {
        break missingId;
      }

      id = R.id.tvNandogami;
      TextView tvNandogami = ViewBindings.findChildViewById(rootView, id);
      if (tvNandogami == null) {
        break missingId;
      }

      id = R.id.tvPopularSearches;
      TextView tvPopularSearches = ViewBindings.findChildViewById(rootView, id);
      if (tvPopularSearches == null) {
        break missingId;
      }

      id = R.id.tvRecentSearches;
      TextView tvRecentSearches = ViewBindings.findChildViewById(rootView, id);
      if (tvRecentSearches == null) {
        break missingId;
      }

      id = R.id.tvSearchResults;
      TextView tvSearchResults = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchResults == null) {
        break missingId;
      }

      id = R.id.tvSearchTitle;
      TextView tvSearchTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchTitle == null) {
        break missingId;
      }

      id = R.id.tvTitlesCount;
      TextView tvTitlesCount = ViewBindings.findChildViewById(rootView, id);
      if (tvTitlesCount == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((NestedScrollView) rootView, filtersChipGroup,
          filtersScrollView, ivProfile, popularSearchesChipGroup, recentSearchesRecyclerView,
          searchEditText, searchResultsRecyclerView, searchTextInputLayout, tvClearAll, tvNandogami,
          tvPopularSearches, tvRecentSearches, tvSearchResults, tvSearchTitle, tvTitlesCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
