rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Titles: Siapa saja bisa baca, tidak ada yang bisa tulis dari aplikasi.
    match /titles/{titleId} {
      allow read: if true;
      allow write: if false;
    }

    // Users: Hanya pengguna terotentikasi yang bisa membaca profil.
    // Pemilik profil adalah satu-satunya yang bisa membuat dan mengubahnya.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Sub-koleksi Reviews di dalam Titles
    match /titles/{titleId}/reviews/{reviewId} {
      // Siapa saja bisa membaca review
      allow read: if true;
      
      // Hanya pengguna terotentikasi yang bisa membuat, mengedit, atau menghapus review mereka sendiri.
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Favorites: Pengguna hanya bisa mengelola favoritnya sendiri.
    match /favorites/{favoriteId} {
      // Hanya pemilik yang bisa membaca, membuat, atau menghapus favoritnya.
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Comments: Aturan kompleks untuk komentar.
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['replyCount', 'likeCount'])
      );
    }

    // Comment Likes: Pengguna hanya mengelola like mereka sendiri.
    match /comment_likes/{likeId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if false;
    }

    // ===== ATURAN BARU UNTUK FITUR-FITUR BARU =====

    // Reading Status: Pengguna hanya bisa mengelola reading status mereka sendiri
    match /reading_status/{statusId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Follows: Pengguna hanya bisa mengelola follow mereka sendiri
    match /follows/{followId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.followerId || 
        request.auth.uid == resource.data.followingId
      );
      allow create: if request.auth != null && request.resource.data.followerId == request.auth.uid;
      allow update: if request.auth != null && request.auth.uid == resource.data.followerId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.followerId;
    }

    // Chats: Peserta chat bisa membaca dan mengelola chat mereka
    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      allow delete: if false; // Tidak ada delete untuk chats
    }

    // Chat Messages: Peserta chat bisa membaca dan mengirim pesan
    match /chat_messages/{messageId} {
      allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(resource.data.chatId)).data.participants;
      allow create: if request.auth != null && 
        request.resource.data.senderId == request.auth.uid &&
        request.auth.uid in get(/databases/$(database)/documents/chats/$(request.resource.data.chatId)).data.participants;
      allow update: if request.auth != null && request.auth.uid == resource.data.senderId;
      allow delete: if false; // Tidak ada delete untuk messages
    }

    // User Recommendations: Pengguna bisa mengirim dan menerima rekomendasi
    match /user_recommendations/{recommendationId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.fromUserId || 
        request.auth.uid == resource.data.toUserId
      );
      allow create: if request.auth != null && request.resource.data.fromUserId == request.auth.uid;
      allow update: if request.auth != null && request.auth.uid == resource.data.toUserId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.fromUserId;
    }
  }
} 